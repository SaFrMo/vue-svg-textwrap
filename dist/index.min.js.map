{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.min.js","sourcesContent":["const SVG_NS = 'http://www.w3.org/2000/svg';\nconst alignments = { 'top': true, 'baseline': true, 'bottom': true, 'middle': true }\nfunction getConfig(mod, cfg) {\n\tconst ret = {\n\t\t'plain': !cfg.plain ? false : true,\n\t\t'width': null || cfg.width,\n\t\t'align': cfg.align === 'none' || cfg.align === false ? false : (alignments[cfg.align] ? cfg.align : 'baseline'),\n\t\t'lineHeight': cfg.lineHeight || '1.125em',\n\t\t'paddingLeft': !cfg.paddingLeft ? (!cfg.padding ? 0 : cfg.padding) : cfg.paddingLeft,\n\t\t'paddingRight': !cfg.paddingRight ? (!cfg.padding ? 0 : cfg.padding) : cfg.paddingRight,\n\t\t'afterReflow': cfg.afterReflow instanceof Function ? cfg.afterReflow : false\n\t};\n\tret._padding = ret.paddingLeft + ret.paddingRight;\n\tfor (let k in mod) {\n\t\tif (k === 'plain') ret.plain = true;\n\t\telse if (alignments[k]) {\n\t\t\tret.align = k;\n\t\t} else if (k === 'none') {\n\t\t\tret.align = false\n\t\t} else if (/\\d+/.test(k))\n\t\t\tret.width = parseInt(k);\n\t}\n\treturn ret;\n}\n/**\n * @param {SVGTextElement} el \n * @param {SVGTSpanElement} span \n * @param {*} config \n */\nfunction newLine(el, span, config) {\n\tconst tmp = span.cloneNode();\n\tel.insertBefore(tmp, span.nextSibling);\n\tspan.style.display = '';\n\ttmp.removeAttribute('y');\n\ttmp.setAttribute('dy', config.lineHeight);\n\tif (!config.align) // set explicitly when not aligning (i.e. don't use text's transform)\n\t\ttmp.setAttribute('x', config.paddingLeft);\n\telse\n\t\ttmp.setAttribute('x', 0);\n\treturn tmp;\n}\n/**\n * @param {SVGTextElement} el \n * @param {String} text \n * @param {Object} config \n */\nfunction set(el, text, config) {\n\tel[config.plain ? 'textContent' : 'innerHTML'] = text || '';\n\tconst h0 = el.getBoundingClientRect().height;\n\tconst plain = [];\n\t// convert text nodes to tspans, clear spans\n\tfor (let i = 0; i < el.childNodes.length; i++) {\n\t\tlet n = el.childNodes[i];\n\t\tif (n instanceof Text) {\n\t\t\tconst tmp = document.createElementNS(SVG_NS, 'tspan');\n\t\t\ttmp.textContent = n.textContent;\n\t\t\tel.replaceChild(tmp, n);\n\t\t\tn = tmp;\n\t\t}\n\t\tif (config.width) {\n\t\t\tplain.push(n.textContent.split(/\\s/));\n\t\t\tn.textContent = '';\n\t\t}\n\t}\n\tif (!config.align) {\n\t\t// set explicitly when not aligning (i.e. don't use text's transform)\n\t\tel.childNodes[0].setAttribute('x', config.paddingLeft);\n\t}\n\tif (config.width) {\n\t\tfor (let i = 0; i < el.childNodes.length; i++) {\n\t\t\tlet n = el.childNodes[i];\n\t\t\tif (n instanceof Text) {\n\t\t\t\tconst tmp = document.createElementNS(SVG_NS, 'tspan');\n\t\t\t\ttmp.textContent = n.textContent;\n\t\t\t\tel.replaceChild(tmp, n);\n\t\t\t\tn = tmp;\n\t\t\t}\n\t\t\tplain.push(n.textContent.split(/\\s/));\n\t\t}\n\n\t\t// float texts\n\t\tlet offset = 0, w = config.width - config._padding, childCnt = el.childElementCount;\n\t\tfor (let c = 0; c < childCnt; c++) {\n\t\t\tconst words = plain[c];\n\t\t\tlet wc = words.length, span = el.childNodes[c + offset], txt = '', forceBreak = false;\n\t\t\tfor (let i = 0; i < wc; i++) {\n\t\t\t\tspan.textContent += i ? ' ' + words[i] : words[i];\n\t\t\t\tforceBreak = el.getBoundingClientRect().width > w;\n\t\t\t\twhile (forceBreak) {\n\t\t\t\t\tspan.textContent = txt;\n\t\t\t\t\tspan = newLine(el, span, config);\n\t\t\t\t\ttxt = span.textContent = words[i];\n\t\t\t\t\toffset++;\n\t\t\t\t\tif (el.getBoundingClientRect().width > w) {\n\t\t\t\t\t\tspan.style.display = 'none'; // too long word, hide for further correct measurements\n\t\t\t\t\t\ttxt = words[++i];\n\t\t\t\t\t\tif (!txt) forceBreak = false;\n\t\t\t\t\t} else forceBreak = false;\n\t\t\t\t}\n\t\t\t\ttxt = span.textContent;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!el.childNodes.length)\n\t\treturn;\n\n\tfor (let i = 0; i < el.childNodes.length; i++) {\n\t\tel.childNodes[i].style.display = '';\n\t}\n\n\tif (config.align === 'middle')\n\t\tel.setAttribute('transform', `translate(${config.paddingLeft}, ${-(el.getBoundingClientRect().height - 1.5 * h0) / 2})`)\n\telse if (config.align === 'baseline')\n\t\tel.setAttribute('transform', `translate(${config.paddingLeft}, 0)`)\n\telse if (config.align === 'bottom')\n\t\tel.setAttribute('transform', `translate(${config.paddingLeft}, ${-(el.getBoundingClientRect().height - h0)})`)\n\telse if (config.align === 'top')\n\t\tel.setAttribute('transform', `translate(${config.paddingLeft}, ${h0})`)\n}\n\n/**\n * Creates a new wrapper directive with the given configuration.\n * @param {ITextWrapperConfiguration} config A configuration object.\n */\nfunction directive(config) {\n\tif (!config) config = {};\n\tconst r = {\n\t\tinserted(el, binding) {\n\t\t\tif (!(el instanceof SVGTextElement))\n\t\t\t\tthrow new Error('Text-wrap directive must be bound to an SVG text element.');\n\t\t\tel.__WRAP_CONFIG = getConfig(binding.modifiers, config);\n\t\t\tr.update.apply(this, arguments);\n\t\t},\n\t\tupdate(el, binding, { context }) {\n\t\t\tif (binding.value != binding.oldValue) {\n\t\t\t\tlet cfg = el.__WRAP_CONFIG\n\t\t\t\tif (binding.value && (typeof binding.value) !== 'string') {\n\t\t\t\t\tconst text = binding.value.text;\n\t\t\t\t\tcfg = getConfig({}, Object.assign({}, el.__WRAP_CONFIG, binding.value));\n\t\t\t\t\tset(el, text, cfg);\n\t\t\t\t} else\n\t\t\t\t\tset(el, binding.value, cfg);\n\t\t\t\tif (cfg.afterReflow)\n\t\t\t\t\tcfg.afterReflow.call(context, el, cfg);\n\t\t\t}\n\t\t},\n\t\tunbind(el) {\n\t\t\tdelete el.__WRAP_CONFIG;\n\t\t}\n\t};\n\treturn r;\n}\nconst Wrapper = directive();\nexport default Wrapper;\n\nexport const ConfiguredWrapper = directive;"]}